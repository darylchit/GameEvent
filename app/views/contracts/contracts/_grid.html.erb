<%= define_grid(@contracts_grid, show_filters: :yes, hide_csv_button: true, html: {class: 'wbmr table table-responsive table-striped tablesaw tablesaw-stack', 'data-tablesaw-mode' => "columntoggle"}) do |g|
	g.last_row do |number_of_columns|
		'<tr><td><div class="no-results">No Results</td></tr>' if g.grid.resultset.size == 0
	end
	g.column name: 'User', attribute: 'username', model: "User", :html => {'data-tablesaw-priority' => "persist"}, detach_with_id: :user_filter, auto_reload: true, class: 'hidden-sm hidden-xs wbmr-avatar' do | c |
		link_to "#{profiles_path()}/#{c.seller.username}" do
			raw "<h5 class='mt0 hidden-sm hidden-xs'> #{c.seller.username} </h5>" + "#{image_tag(c.seller.avatar_url)} <h5 class='mt0 hidden-lg hidden-md'>#{c.seller.username} </h5>"
		end
	end
	g.column name: 'Generosity', attribute: 'generosity_rating', model: 'User', :html => {'data-tablesaw-priority' => "0"}, detach_with_id: :generosity_filter, filter_type: :range, class: "hidden-sm hidden-xs tablesaw-cell-hidden psa-col" do | c |
		link_to "#{profiles_path()}/#{c.seller.username}" do
			if c.seller.generosity_rating == 0
				raw("<span class=\"hidden-lg hidden-md\" >Generosity:&nbsp;</span> N/A")
			else
				raw("<span class=\"hidden-lg hidden-md visibile-sm visibile-xs\" >Generosity:&nbsp;</span><span class=\"generosity-rating-read-only\" data-score=\"#{c.seller.generosity_rating}\"></span>")
			end
		end
	end
	g.column name: 'P.S.A', attribute: 'psa_rating', model: 'User', :html => {'data-tablesaw-priority' => "1"}, detach_with_id: :psa_filter, filter_type: :range, class: "hidden-sm hidden-xs psa-col" do | c |
		link_to "#{profiles_path()}/#{c.seller.username}" do
			if c.seller.psa_rating == 0
				raw("<span class=\"hidden-lg hidden-md\" >PSA:&nbsp;</span> N/A")
			else
				raw("<span class=\"hidden-lg hidden-md\" >PSA:&nbsp;</span><span class=\"psa-rating-read-only\" data-score=\"#{c.seller.psa_rating}\"></span>")
			end
		end
	end
	g.column name: 'Personality', attribute: 'personality_rating', model: 'User', :html => {'data-tablesaw-priority' => "2"}, detach_with_id: :personality_filter, filter_type: :range, class: "hidden-sm hidden-xs tablesaw-cell-hidden psa-col" do | c |
		link_to "#{profiles_path()}/#{c.seller.username}" do
			if c.seller.personality_rating == 0
				raw("<span class=\"hidden-lg hidden-md\" >Personality:&nbsp;</span> N/A")
			else
				raw("<span class=\"hidden-lg hidden-md\" >Personality:&nbsp;</span><span class=\"psa-rating-read-only\" data-score=\"#{c.seller.personality_rating}\"></span>")
			end
		end
	end
	g.column name: 'Skill', attribute: 'skill_rating', model: 'User', :html => {'data-tablesaw-priority' => "3"}, detach_with_id: :skill_filter, filter_type: :range, class: "hidden-sm hidden-xs tablesaw-cell-hidden psa-col" do | c |
		link_to "#{profiles_path()}/#{c.seller.username}" do
			if c.seller.skill_rating == 0
				raw("<span class=\"hidden-lg hidden-md\" >Skill:&nbsp;</span> N/A")
			else
				raw("<span class=\"hidden-lg hidden-md\" >Skill:&nbsp;</span><span class=\"psa-rating-read-only\" data-score=\"#{c.seller.skill_rating}\"></span>")
			end
		end
	end
	g.column name: 'Approval', attribute: 'approval_rating', model: 'User', :html => {'data-tablesaw-priority' => "4"}, detach_with_id: :approval_filter, filter_type: :range, class: "hidden-sm hidden-xs tablesaw-cell-hidden psa-col" do | c |
		link_to "#{profiles_path()}/#{c.seller.username}" do
			if c.seller.approval_rating == 0
				raw("<span class=\"hidden-lg hidden-md\" >Approval:&nbsp;</span> N/A")
			else
				raw("<span class=\"hidden-lg hidden-md\" >Approval:&nbsp;</span><span class=\"psa-rating-read-only\" data-score=\"#{c.seller.approval_rating}\"></span>")
			end
		end
	end
	g.column name: 'Experience', class: 'hidden-sm hidden-xs', attribute: 'contracts_completed', model: 'User', :html => {'data-tablesaw-priority' => "5"}, detach_with_id: :contracts_completed_filter, filter_type: :range do | c |
		link_to "#{profiles_path()}/#{c.seller.username}" do
			raw("<span class=\"hidden-lg hidden-md\" >Experience:&nbsp;</span> #{c.seller.contracts_completed}")
		end
	end
	g.column name: 'Cancellation Rate', :html => {'data-tablesaw-priority' => "6"}, class: "hidden-sm hidden-xs tablesaw-cell-hidden" do | c |
		if c.seller.cancellation_rate.present? && c.seller.cancellation_rate >= 0
			link_to "#{profiles_path()}/#{c.seller.username}" do
				raw("<span class=\"hidden-lg hidden-md\" >Cancellation Rate:&nbsp;</span> #{c.seller.cancellation_rate}%")
			end
		else
			raw("<span class=\"hidden-lg hidden-md\" >Cancellation Rate:&nbsp;</span> N/A")
		end
	end
	g.column name: 'Player Age', attribute: 'date_of_birth', model: 'User', :html => {'data-tablesaw-priority' => "6"}, detach_with_id: :player_age_filter, filter_type: :date, class: "hidden-sm hidden-xs tablesaw-cell-hidden" do | c |
		if c.seller.public_age
			age_in_years(c.seller.date_of_birth)
		else
			raw("n/a")
		end
	end
	g.column name: 'Newb Patience', attribute: 'newbie_patience_level', model: "User", :html => {'data-tablesaw-priority' => "7"}, class: "hidden-sm hidden-xs tablesaw-cell-hidden", custom_filter: ['High', 'Low'], detach_with_id: :newb_patience_filter do | c |
		link_to "#{profiles_path()}/#{c.seller.username}" do
			raw("<span class=\"hidden-lg hidden-md\" >Patience:&nbsp;</span> #{c.seller.newbie_patience_level}")
		end
	end
	g.column name: 'Game Type', class: 'hidden-sm hidden-xs', attribute: 'will_play', :html => {'data-tablesaw-priority' => "8"}, custom_filter: [['Player vs. Player', 'Player vs. Player'], ['Player vs. Enemy', 'Player vs. Enemy'], ['All Types', 'not null']], detach_with_id: :will_play_filter do | c |
		link_to "#{profiles_path()}/#{c.seller.username}" do
			if c.will_play == 'Player vs. Player'
				raw("<span class=\"hidden-lg hidden-md\" >Game Type:&nbsp;</span> PvP")
			elsif c.will_play == 'Player vs. Enemy'
				raw("<span class=\"hidden-lg hidden-md\" >Game Type:&nbsp;</span> PvE")
			else
				raw("<span class=\"hidden-lg hidden-md\" >Game Type:&nbsp;</span> #{c.will_play}")
			end
		end
	end
	g.column name: 'Play Type', class: 'hidden-sm hidden-xs', attribute: 'play_type', :html => {'data-tablesaw-priority' => "8"}, custom_filter: ['Casual', 'Serious'], detach_with_id: :play_type_filter do | c |
		link_to "#{profiles_path()}/#{c.seller.username}" do
			c.play_type
		end
	end
	g.column name: 'Details', class: 'hidden-sm hidden-xs', attribute: 'details', detach_with_id: :details_filter, auto_reload: true do | c |
		link_to "#{profiles_path()}/#{c.seller.username}" do
			raw "<p class='description-text'>#{truncate(c.details, :length => 250)}</p>"
		end
	end
	g.column name: 'Date', :html => {'data-tablesaw-priority' => "9"}, class: "hidden-sm hidden-xs tablesaw-inline", attribute: 'start_date_time', detach_with_id: :date_filter, filter_type: :datetime do | c |
		link_to "#{profiles_path()}/#{c.seller.username}" do
			compact_date c.start_date_time
		end
	end
	g.column name: 'Time', :html => {'data-tablesaw-priority' => "10"}, class: "hidden-sm hidden-xs tablesaw-inline", attribute: 'start_date_time', detach_with_id: :time_filter do | c |
		link_to "#{profiles_path()}/#{c.seller.username}" do
			standard_time c.start_date_time
		end
	end
	g.column name: 'Length', :html => {'data-tablesaw-priority' => "11"}, class: "hidden-sm hidden-xs tablesaw-inline", attribute: 'duration', filter_type: :checkbox_range,
	  values: {
		"1 Hour"  => ['60', '60'],
		'2 Hours' => ['120', '120'],
		'3 Hours' => ['180', '180'],
		'4 Hours' => ['240', '240'],
		'5 Hours' => ['300', '300'],
		'6 Hours' => ['360', '360']
	  },detach_with_id: :length_filter do | c |
			d = c.duration/60
	  	link_to "#{profiles_path()}/#{c.seller.username}" do
			d.to_s + ' Hr'.pluralize(d)
		end
	end
	g.column name: 'Donation', class: 'hidden-sm hidden-xs', :html => {'data-tablesaw-priority' => "12"}, attribute: 'price_in_cents', filter_type: :range,
	  values: {
		"$1.00 - $9.99"   => ['100', '999'],
		'$10.00 - $19.99' => ['1000', '1999'],
		'$20.00 - $39.99' => ['2000', '3999'],
		'$40.00 - $69.99' => ['4000', '6999'],
		'$70.00 - $99.99' => ['7000', '9999'],
	  },
	  detach_with_id: :price_in_cents_filter, auto_reload: true do | c |
  	link_to "#{profiles_path()}/#{c.seller.username}" do
			raw "<span class='wbmr-price'>#{c.price_in_cents == 0 ? 'n/a' : '$' + c.price_in_dollars} </span>"
		end
	end
	g.column name: '', attribute: 'id', class: "hidden", model: 'GameSystem', :html => {'data-tablesaw-priority' => "persist"}, detach_with_id: :game_system_filter,
		custom_filter: @sorted_systems.map{
			|game_system| [game_system.title, game_system.id]
		}, allow_multiple_selection: true do |c|
		""
	end
	g.column name: '', attribute: 'id', class: "hidden", model: 'Game', :html => {'data-tablesaw-priority' => "persist"}, detach_with_id: :game_filter,
		custom_filter: @sorted_games.map{
			|game| [game.title, game.id]
		}, allow_multiple_selection: true do |c|
		""
	end
	g.column name: '', class: 'hidden-sm hidden-xs ' do |c|
		if c.can_be_claimed_by_user? current_user
			link_to contract_path(c.id), class: "btn btn-sm btn-primary", :html => {'data-tablesaw-priority' => "persist"}, remote: true do
				"Select"
			end
		end
	end

	g.column name: '', class: 'hidden-lg hidden-md' do | c |
		raw render 'card', c: c
	end

	#g.column name: 'Date', attribute: 'start_date_time' do | c |
	#	link_to c.start_date_time, show_resource_path(c)
	#end
	#g.column name: 'Duration', attribute: 'duration' do | c |
	#	link_to c.start_date_time, show_resource_path(c)
	#end
end -%>



<input type="text" name="grid[f][users_from_age]" id="grid_f_users_from_age" value="<%= @from_age %>" class="form-control" style="display: none;">

<input type="text" name="grid[f][users_to_age]" id="grid_f_users_to_age" value="<%= @to_age %>" class="form-control" style="display: none;">
